version: '3.7'
services:
  node:
    image: kopnikorg/kopnik-node:latest
    environment:
      # переопределяем параметры подключения для работы сервера в контейнере
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./.env:/app/.env
    ports:
      # внутри тоже порты разные, чтобы можно было и без контейнера одновременно  запустить сервера дев и тест
      - ${APP_PORT}:${APP_PORT}
    command: [ "npm", "start" ]

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DB}
    volumes:
      - ../kopnik-db/db-${NODE_ENV}:/var/lib/postgresql/data
      - ../kopnik-db/dumps-${NODE_ENV}:/var/lib/postgresql/dumps
    ports:
      - ${DB_PORT}:5432

  client:
    image: kopnikorg/kopnik-client:latest
    volumes:
      - dist:/app/dist
    command: [ "sleep", "1000000" ]

  nginx:
#    image: kopnikorg/kopnik-nginx:latest
    image: nginx:latest
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
#      - /home/someuser/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - /home/someuser/nginx/templates:/etc/nginx/templates
#      - /home/someuser/certs:/etc/nginx/certs/
      - dist:/app/dist
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=staging.kopnik.org
#    network_mode: host
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot




    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  elasticsearch:
    build:
      context: ./elastic/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    #    ports:
    #      - '9200:9200'
    volumes:
      - ./elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #      - ./elastic/data:/usr/share/elasticsearch/data

  logstash:
    build:
      context: ./logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: logstash
    restart: always
    environment:
      - LOGSTASH_PWD=${ELASTIC_PASSWORD}
      - LOGSTASH_USER=${ELASTIC_USERNAME}
    volumes:
      - ./logs:/var/log/logs/
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    #      - ./logstash/templates:/usr/share/logstash/templates/
    links:
      - 'elasticsearch'
  #    ports:
  #      - '9600:9600'
  #      - '5044:5044'

  kibana:
    build:
      context: ./kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    links:
      - 'elasticsearch'
    ports:
      - '5602:5601'
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml

volumes:
  dist:
