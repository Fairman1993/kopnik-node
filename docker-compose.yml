version: '3.7'
services:
  node:
    image: kopnikorg/kopnik-node:latest
    environment:
      # переопределяем параметры подключения для работы сервера в контейнере
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./.env:/app/.env
    ports:
      # внутри тоже порты разные, чтобы можно было и без контейнера одновременно  запустить сервера дев и тест
      - ${APP_PORT}:${APP_PORT}
    command: [ "npm", "start" ]

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DB}
    volumes:
      - ../kopnik-db/db-${NODE_ENV}:/var/lib/postgresql/data
      - ../kopnik-db/dumps-${NODE_ENV}:/var/lib/postgresql/dumps
    ports:
      - ${DB_PORT}:5432

  client:
    image: kopnikorg/kopnik-client:latest
    # тут надо папку /app/dist сделать видимой контейнеру nginx
    volumes:
      - client-dist:/app/dist

  nginx:
#    image: kopnikorg/kopnik-nginx:latest
    image: nginx:latest
#    restart: always
    ports:
      - "80:80"
      - "443:443"
    # тут надо папку /app/dist клинета подмапить себе и отдавать пользователю ее содержание
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  client-dist:
